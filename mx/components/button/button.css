/*
Button Component Styles

These styles rely on custom properties (--spacing-*, --primary, etc.)
defined in utilities.css. Ensure utilities.css is loaded first.
*/

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  border-radius: var(--spacing-2-5); 
  font-size: 0.875rem; 
  font-weight: 500;   
  line-height: 1;       
  cursor: pointer;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: var(--transition-timing-function);
  transition-duration: var(--transition-duration);
  border: 1px solid transparent;
  gap: var(--spacing-1-5); 
  height: var(--spacing-9); 
  padding: var(--spacing-2) var(--spacing-4); 
}

/* Default Button Variant */
.btn-primary {
  background-color: var(--primary);
  color: var(--primary-foreground);
}
.btn-primary:hover:not(:disabled) {
  background-color: var(--primary-hover);
}

/* Secondary Button Variant */
.btn-secondary {
  background-color: var(--secondary);
  color: var(--secondary-foreground);
}
.btn-secondary:hover:not(:disabled) {
  background-color: var(--secondary-hover);
}

/* Destructive Button Variant */
.btn-destructive {
  background-color: var(--destructive);
  color: #fff;
}
.btn-destructive:hover:not(:disabled) {
  background-color: var(--destructive-hover);
  color: #fff;
}

/* Outline Button Variant */
.btn-outline {
  border-color: var(--input); 
  background-color: var(--primary-foreground); 
  color: var(--foreground);
}
.btn-outline:hover:not(:disabled) {
  background-color: var(--secondary);
  color: var(--secondary-foreground);   
  border-color: var(--input);                 
}

/* Ghost Button Variant */
.btn-ghost {
  background-color: transparent;
  color: var(--primary);
}
.btn-ghost:hover:not(:disabled) {
  background-color: var(--secondary);
  color: var(--secondary-foreground); 
}

/* Link Button Variant */
.btn-link {
  background-color: transparent;
  color: var(--primary);
  text-decoration: none;
  text-underline-offset: 4px;
  height: auto;
  padding-left: var(--spacing-0);
  padding-right: var(--spacing-0);
  border-color: transparent;
}
.btn-link:hover:not(:disabled) {
  text-decoration: underline;
  color: var(--primary-hover);
  background-color: transparent;
}

/* Icon Button Modifier */
.btn-icon {
  height: var(--spacing-9);
  width: var(--spacing-9);
  padding: var(--spacing-0);
}
.btn-icon > svg {
  width: var(--spacing-4);
  height: var(--spacing-4);
}

/* Button States */
.btn:focus-visible {
  outline: 1.5px solid var(--ring);
  outline-offset: 1.5px;
}
.btn:disabled {
  opacity: 0.725;
  cursor: not-allowed;
  pointer-events: none;
}

/* SVG icon default size within buttons */
.btn > svg {
  width: var(--spacing-4);
  height: var(--spacing-4);
}

/* Size Modifiers */
.btn-sm {
  height: var(--spacing-8);
  padding: var(--spacing-1-5) var(--spacing-2);
  font-size: 0.875rem;
}
.btn-sm > svg {
  width: var(--spacing-4);
  height: var(--spacing-4);
}

.btn-lg {
  height: var(--spacing-11);
  padding: var(--spacing-3) var(--spacing-6);
  font-size: 1rem;
}
.btn-lg > svg {
  width: var(--spacing-5);
  height: var(--spacing-5);
}

/* Animation */
.animate-spin {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}